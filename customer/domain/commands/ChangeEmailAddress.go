// Code generated by generate/main.go. DO NOT EDIT.

package commands

import (
	"go-iddd/customer/domain/values"
	"go-iddd/shared"
	"reflect"
	"strings"
)

type ChangeEmailAddress struct {
	customerID   *values.CustomerID
	emailAddress *values.EmailAddress
}

/*** Factory Method ***/

func NewChangeEmailAddress(
	customerID string,
	emailAddress string,
) (*ChangeEmailAddress, error) {

	customerIDValue, err := values.RebuildCustomerID(customerID)
	if err != nil {
		return nil, err
	}

	emailAddressValue, err := values.NewEmailAddress(emailAddress)
	if err != nil {
		return nil, err
	}

	changeEmailAddress := &ChangeEmailAddress{
		customerID:   customerIDValue,
		emailAddress: emailAddressValue,
	}

	return changeEmailAddress, nil
}

/*** Getter Methods ***/

func (changeEmailAddress *ChangeEmailAddress) CustomerID() *values.CustomerID {
	return changeEmailAddress.customerID
}

func (changeEmailAddress *ChangeEmailAddress) EmailAddress() *values.EmailAddress {
	return changeEmailAddress.emailAddress
}

/*** Implement shared.Command ***/

func (changeEmailAddress *ChangeEmailAddress) AggregateID() shared.IdentifiesAggregates {
	return changeEmailAddress.customerID
}

func (changeEmailAddress *ChangeEmailAddress) CommandName() string {
	commandType := reflect.TypeOf(changeEmailAddress).String()
	commandTypeParts := strings.Split(commandType, ".")
	commandName := commandTypeParts[len(commandTypeParts)-1]

	return strings.Title(commandName)
}
