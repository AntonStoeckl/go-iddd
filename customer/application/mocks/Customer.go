// Code generated by mockery v1.0.0. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"
import shared "go-iddd/shared"

// Customer is an autogenerated mock type for the Customer type
type Customer struct {
	mock.Mock
}

// AggregateIdentifier provides a mock function with given fields:
func (_m *Customer) AggregateIdentifier() shared.AggregateIdentifier {
	ret := _m.Called()

	var r0 shared.AggregateIdentifier
	if rf, ok := ret.Get(0).(func() shared.AggregateIdentifier); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(shared.AggregateIdentifier)
		}
	}

	return r0
}

// AggregateName provides a mock function with given fields:
func (_m *Customer) AggregateName() string {
	ret := _m.Called()

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// Apply provides a mock function with given fields: cmd
func (_m *Customer) Apply(cmd shared.Command) error {
	ret := _m.Called(cmd)

	var r0 error
	if rf, ok := ret.Get(0).(func(shared.Command) error); ok {
		r0 = rf(cmd)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// RecordedEvents provides a mock function with given fields:
func (_m *Customer) RecordedEvents() shared.EventStream {
	ret := _m.Called()

	var r0 shared.EventStream
	if rf, ok := ret.Get(0).(func() shared.EventStream); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(shared.EventStream)
		}
	}

	return r0
}
