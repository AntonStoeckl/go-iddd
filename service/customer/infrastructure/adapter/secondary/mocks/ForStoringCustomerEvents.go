// Code generated by mockery v1.0.0. DO NOT EDIT.

// +build test

package mocks

import es "github.com/AntonStoeckl/go-iddd/service/lib/es"
import mock "github.com/stretchr/testify/mock"
import values "github.com/AntonStoeckl/go-iddd/service/customer/domain/customer/values"

// ForStoringCustomerEvents is an autogenerated mock type for the ForStoringCustomerEvents type
type ForStoringCustomerEvents struct {
	mock.Mock
}

// AppendToCustomerEventStream provides a mock function with given fields: recordedEvents, id
func (_m *ForStoringCustomerEvents) AppendToCustomerEventStream(recordedEvents es.DomainEvents, id values.CustomerID) error {
	ret := _m.Called(recordedEvents, id)

	var r0 error
	if rf, ok := ret.Get(0).(func(es.DomainEvents, values.CustomerID) error); ok {
		r0 = rf(recordedEvents, id)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// PurgeCustomerEventStream provides a mock function with given fields: id
func (_m *ForStoringCustomerEvents) PurgeCustomerEventStream(id values.CustomerID) error {
	ret := _m.Called(id)

	var r0 error
	if rf, ok := ret.Get(0).(func(values.CustomerID) error); ok {
		r0 = rf(id)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// RegisterCustomer provides a mock function with given fields: recordedEvents, id
func (_m *ForStoringCustomerEvents) RegisterCustomer(recordedEvents es.DomainEvents, id values.CustomerID) error {
	ret := _m.Called(recordedEvents, id)

	var r0 error
	if rf, ok := ret.Get(0).(func(es.DomainEvents, values.CustomerID) error); ok {
		r0 = rf(recordedEvents, id)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// RetrieveCustomerEventStream provides a mock function with given fields: id
func (_m *ForStoringCustomerEvents) RetrieveCustomerEventStream(id values.CustomerID) (es.DomainEvents, error) {
	ret := _m.Called(id)

	var r0 es.DomainEvents
	if rf, ok := ret.Get(0).(func(values.CustomerID) es.DomainEvents); ok {
		r0 = rf(id)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(es.DomainEvents)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(values.CustomerID) error); ok {
		r1 = rf(id)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
