// Code generated by mockery v1.0.0. DO NOT EDIT.

// +build test

package mocks

import customer "github.com/AntonStoeckl/go-iddd/service/customer/domain/customer"
import mock "github.com/stretchr/testify/mock"
import sql "database/sql"
import values "github.com/AntonStoeckl/go-iddd/service/customer/domain/customer/values"

// ForAssertingUniqueEmailAddresses is an autogenerated mock type for the ForAssertingUniqueEmailAddresses type
type ForAssertingUniqueEmailAddresses struct {
	mock.Mock
}

// Assert provides a mock function with given fields: assertions, tx
func (_m *ForAssertingUniqueEmailAddresses) Assert(assertions customer.UniqueEmailAddressAssertions, tx *sql.Tx) error {
	ret := _m.Called(assertions, tx)

	var r0 error
	if rf, ok := ret.Get(0).(func(customer.UniqueEmailAddressAssertions, *sql.Tx) error); ok {
		r0 = rf(assertions, tx)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// ClearFor provides a mock function with given fields: customerID, tx
func (_m *ForAssertingUniqueEmailAddresses) ClearFor(customerID values.CustomerID, tx *sql.Tx) error {
	ret := _m.Called(customerID, tx)

	var r0 error
	if rf, ok := ret.Get(0).(func(values.CustomerID, *sql.Tx) error); ok {
		r0 = rf(customerID, tx)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
